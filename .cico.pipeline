#!groovy

/**
 * This is Noggin's Jenkins Pipeline Jenkinsfile.
 *
 * You can read documentation about this file at https://jenkins.io/doc/book/pipeline/jenkinsfile/.
 * A useful list of plugins can be found here: https://jenkins.io/doc/pipeline/steps/.
 *
 * For reference, this is the source of the fedoraInfraTox() macro that runs
 * tox on mutiple Fedora releases:
 * https://github.com/centosci/cico-shared-library/blob/master/vars/fedoraInfraTox.groovy
 */

// fedoraInfraTox{}

/**
 * Distros we want to test on
 */
//def ACTIVE_DISTROS = ["f31", "f32", "epel7", "rawhide"]
def ACTIVE_DISTROS = ["f34", "f35", "latest"]




def stages = [:]
def fedora_containers = [
                containerTemplate(name: 'jnlp',
                                  image: "quay.io/centosci/cico-workspace:latest",
                                  ttyEnabled: false,
                                  args: '${computer.jnlpmac} ${computer.name}',
                                  workingDir: "/workdir")
]

ACTIVE_DISTROS.each { fedora ->
    stages["tox-${fedora}"] = {
        stage("tox-${fedora}"){
            container("${fedora}"){
                sh "mkdir -p /workdir/home/${fedora}"
                withEnv(["HOME=/workdir/home/${fedora}"]) {
                    sh "cp -al ./ ../${fedora}/"
                    dir( "../${fedora}" ){
                        sh "rm -rf .tox"
                        try {
                            sh "tox --skip-missing-interpreters"
                            githubNotify context: "CI on ${fedora}", status: 'SUCCESS', credentialsId: 'status-push-cred'
                        } catch(error) {
                            githubNotify context: "CI on ${fedora}", status: 'FAILURE', credentialsId: 'status-push-cred'
                            throw error
                        }
                    }
                }
            }
        }
    }

    fedora_containers.add(containerTemplate(name: "${fedora}",
                                            image: "quay.io/centosci/python-tox:${fedora}",
                                            ttyEnabled: true,
                                            alwaysPullImage: true,
                                            command: "cat",
                                            workingDir: '/workdir'))
}

podTemplate(name: 'fedora-tox',
            label: 'fedora-tox',
            cloud: 'openshift',
            containers: fedora_containers
){
    node('fedora-tox'){
        ansiColor('xterm'){
            stage ('checkout'){
                checkout scm
            }

            parallel stages
        }
    }
}
